<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.elim.learn.mybatis.dao.SysWfProcessMapper">
	<resultMap id="BaseResultMap" type="com.elim.learn.mybatis.model.SysWfProcess">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="template_id" jdbcType="INTEGER" property="templateId" />
		<result column="creator" jdbcType="INTEGER" property="creator" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<collection property="nodes" column="id"
			ofType="com.elim.learn.mybatis.model.SysWfNode" select="selectNodes" fetchType="lazy" />
	</resultMap>
	<resultMap id="SysWfNodeResult" type="com.elim.learn.mybatis.model.SysWfNode">
		<id column="id" jdbcType="INTEGER" property="nodeId" />
		<result column="process_id" jdbcType="INTEGER" property="processId" />
		<result column="node_code" jdbcType="VARCHAR" property="nodeCode" />
		<result column="node_name" jdbcType="VARCHAR" property="nodeName" />
	</resultMap>
	<sql id="Base_Column_List">
		id, template_id, creator, create_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_wf_process
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectNodes" 
		resultMap="SysWfNodeResult">
		select id, process_id, node_code, node_name from sys_wf_node
		where process_id=#{id}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		sys_wf_process
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.elim.learn.mybatis.model.SysWfProcess"
		keyProperty="id" useGeneratedKeys="true">
		insert into sys_wf_process (id,
		template_id, creator,
		create_time)
		values (#{id,jdbcType=INTEGER},
		#{templateId,jdbcType=INTEGER},
		#{creator,jdbcType=INTEGER},
		#{createTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.elim.learn.mybatis.model.SysWfProcess"
		keyProperty="id" useGeneratedKeys="true">
		insert into sys_wf_process
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="templateId != null">
				template_id,
			</if>
			<if test="creator != null">
				creator,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="templateId != null">
				#{templateId,jdbcType=INTEGER},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.elim.learn.mybatis.model.SysWfProcess">
		update sys_wf_process
		<set>
			<if test="templateId != null">
				template_id = #{templateId,jdbcType=INTEGER},
			</if>
			<if test="creator != null">
				creator = #{creator,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.elim.learn.mybatis.model.SysWfProcess">
		update
		sys_wf_process
		set template_id = #{templateId,jdbcType=INTEGER},
		creator = #{creator,jdbcType=INTEGER},
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>





	<resultMap id="SingleSql1ToNResult" type="com.elim.learn.mybatis.model.SysWfProcess">
		<!-- id非常重要，用来区分记录 -->
		<id property="id" column="id" />
		<result property="creator" column="creator" />
		<result property="templateId" column="template_id" />
		<result property="createTime" column="create_time" />
		<!-- 指定关联的集合属性的数据映射，ofType属性指定集合元素对应的数据类型 -->
		<collection property="nodes"
			ofType="com.elim.learn.mybatis.model.SysWfNode">
			<id property="nodeId" column="node_id" />
			<result property="nodeCode" column="node_code" />
			<result property="nodeName" column="node_name" />
			<result property="processId" column="id" />
			<association property="process"
				javaType="com.elim.learn.mybatis.model.SysWfProcess" resultMap="SysWfProcess" />
		</collection>
	</resultMap>

	<resultMap id="SysWfProcess" type="com.elim.learn.mybatis.model.SysWfProcess">
		<id property="id" column="id" />
		<result property="creator" column="creator" />
		<result property="templateId" column="template_id" />
		<result property="createTime" column="create_time" />
	</resultMap>

	<!-- 只用一条SQL查出一对多关系 -->
	<select id="singleSql1ToN" parameterType="java.lang.Integer"
		resultMap="SingleSql1ToNResult">
		select
		a.id,a.template_id,a.creator,a.create_time,b.id node_id,b.node_code, b.node_name
		from sys_wf_process a
		left join sys_wf_node b
		on a.id=b.process_id
		where a.id=#{id}
	</select>




	<select id="findByForEach" resultMap="BaseResultMap">
		select * from sys_wf_process
		where id in
		<!-- 遍历的对象是Map.Entry时，index代表对应的key，item代表对应的value -->
		<foreach collection="collection" index="key" item="value"
			open="(" close=")" separator=",">
			#{key},#{value}
		</foreach>
	</select>

	<select id="findByForEach2" resultMap="BaseResultMap">
		select * from sys_wf_process
		where id in
		<!-- 遍历的对象是Map.Entry时，index代表对应的key，item代表对应的value -->
		<foreach collection="list" item="value" open="(" close=")"
			separator=",">
			#{value}
		</foreach>
	</select>







</mapper>