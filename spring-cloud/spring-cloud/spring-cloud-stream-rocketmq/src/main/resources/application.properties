server.port=9000
spring.application.name=spring-cloud-stream-rocketmq
spring.cloud.stream.rocketmq.binder.namesrv-addr=127.0.0.1:9876



spring.cloud.stream.bindings.output1.destination=test-topic1
spring.cloud.stream.bindings.output.destination=test-topic
#spring.cloud.stream.bindings.output.content-type=application/json
spring.cloud.stream.bindings.output2.destination=test-topic2
#spring.cloud.stream.bindings.output2.content-type=application/json
#
#
spring.cloud.stream.bindings.input.destination=test-topic2
spring.cloud.stream.bindings.input.group=test-group2
#spring.cloud.stream.bindings.input.content-type=application/json
spring.cloud.stream.bindings.input1.destination=test-topic1
spring.cloud.stream.bindings.input1.group=test-group1

spring.cloud.stream.bindings.input1.consumer.maxAttempts=6
spring.cloud.stream.bindings.input1.consumer.backOffInitialInterval=500
spring.cloud.stream.bindings.input1.consumer.backOffMaxInterval=8000
spring.cloud.stream.bindings.input1.consumer.backOffMultiplier=3

spring.cloud.stream.bindings.input1.consumer.concurrency=3
spring.cloud.stream.bindings.input1.content-type=application/json

spring.cloud.stream.bindings.input2.destination=test-topic
spring.cloud.stream.bindings.input2.group=test-group

#
#
#
#spring.cloud.stream.bindings.userOutput.destination=user-topic
#spring.cloud.stream.bindings.userOutput.content-type=application/json
#
#spring.cloud.stream.bindings.userInput.destination=user-topic
#spring.cloud.stream.bindings.userInput.content-type=application/json
#spring.cloud.stream.bindings.userInput.group=user-group
#
#spring.cloud.stream.bindings.userInput2.destination=user-topic2
#spring.cloud.stream.bindings.userInput2.content-type=application/json
#spring.cloud.stream.bindings.userInput2.group=user-group

#spring.cloud.stream.bindings.output3.destination=user-partitioin-topic
#spring.cloud.stream.bindings.output3.content-type=application/json
#spring.cloud.stream.bindings.output3.producer.partitionKeyExpression=payload
#spring.cloud.stream.bindings.output3.producer.partitionCount=2
#
#
#spring.cloud.stream.bindings.input3.destination=user-partitioin-topic
#spring.cloud.stream.bindings.input3.content-type=application/json
#spring.cloud.stream.bindings.input3.group=user-partition
#spring.cloud.stream.bindings.input3.consumer.partitioned=true
#spring.cloud.stream.instanceIndex=1
#spring.cloud.stream.instanceCount=2



management.endpoints.web.exposure.include=*
management.health.binders.enabled=true