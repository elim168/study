server.port=9001
spring.application.name=spring-cloud-stream-rocketmq
spring.cloud.stream.rocketmq.binder.namesrv-addr=127.0.0.1:9876

spring.cloud.stream.kafka.binder.brokers=localhost



spring.cloud.stream.bindings.output1.destination=test-topic1
spring.cloud.stream.bindings.output.destination=test-topic
#spring.cloud.stream.bindings.output.content-type=application/json
spring.cloud.stream.bindings.output2.destination=test-topic2
#spring.cloud.stream.bindings.output2.content-type=application/json
#
#
spring.cloud.stream.bindings.input.destination=test-topic2
spring.cloud.stream.bindings.input.group=test-group2
#spring.cloud.stream.bindings.input.content-type=application/json
spring.cloud.stream.bindings.input1.destination=test-topic1
spring.cloud.stream.bindings.input1.group=test-group1

#spring.cloud.stream.rocketmq.bindings.input1.consumer.tags=tag0||tag1
#spring.cloud.stream.rocketmq.bindings.input1.consumer.orderly=true
#spring.cloud.stream.rocketmq.bindings.input1.consumer.broadcasting=true

spring.cloud.stream.bindings.input1.consumer.maxAttempts=6
spring.cloud.stream.bindings.input1.consumer.backOffInitialInterval=500
spring.cloud.stream.bindings.input1.consumer.backOffMaxInterval=8000
spring.cloud.stream.bindings.input1.consumer.backOffMultiplier=3

#spring.cloud.stream.bindings.input1.consumer.concurrency=3
spring.cloud.stream.bindings.input1.content-type=application/json

spring.cloud.stream.bindings.input2.destination=test-topic
spring.cloud.stream.bindings.input2.group=test-group


management.endpoints.web.exposure.include=*
management.health.binders.enabled=true