<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:reg="http://www.dangdang.com/schema/ddframe/reg"
	xmlns:job="http://www.dangdang.com/schema/ddframe/job"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.dangdang.com/schema/ddframe/reg
                        http://www.dangdang.com/schema/ddframe/reg/reg.xsd
                        http://www.dangdang.com/schema/ddframe/job
                        http://www.dangdang.com/schema/ddframe/job/job.xsd
                        ">
                        
    <description>
    	官方文档：http://dangdangdotcom.github.io/elastic-job/post/user_guide/lite/dev_guide/
    </description>
    
    <!-- 如果需要做分布式作业调度，则对应的实例必须是在多台机器上跑的，因为elastic-job是以IP来区分一个节点的；另外namespace和使用的
    	zookeeper也必须是一样的 -->
	<!--配置作业注册中心 -->
	<reg:zookeeper id="regCenter" server-lists="localhost:2181"
		namespace="dd-job" base-sleep-time-milliseconds="1000"
		max-sleep-time-milliseconds="3000" max-retries="3" />

	<!-- 配置作业 -->
	<!-- 参数overwrite为true即允许客户端的作业配置覆盖注册中心的配置，每次启动服务都会将客户端的覆盖注册中心的，
		默认为false。参数failover表示是否开启失效转移，默认为false，其它参数配置请参考官方文档 -->
		
	<!-- sharding-total-count参数用于指定分片数，当分片数大于机器数量的时候，每台机器分配到的片数会是平均的，
		第一片是从0开始的，比如总共分6片，有两台机器，则第一台机器会分得0,1,2三片，而第二台机器会分得3,4,5三片；当有
		机器宕机了或者有新机器加入的时候都会触发重新分片。如果有多台机器，而分片总数是1的时候即相当于1主多从的配置。 -->
	<job:simple id="myElasticJob" class="com.elim.learn.elastic.job.MyElasticJob"
		registry-center-ref="regCenter" cron="0/30 * * * * ?"
		sharding-total-count="6" sharding-item-parameters="0=A,1=B,2=C,3=D,4=E,5=F" 
		failover="true"
		overwrite="true"/>


</beans>