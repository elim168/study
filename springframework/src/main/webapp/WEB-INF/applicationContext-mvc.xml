<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-4.1.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
     http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd">

    <mvc:annotation-driven
        enable-matrix-variables="true">
        <!-- <mvc:async-support default-timeout="10000" task-executor=""> 
            <mvc:callable-interceptors> <bean/> </mvc:callable-interceptors> <mvc:deferred-result-interceptors> 
            <bean/> </mvc:deferred-result-interceptors> </mvc:async-support> -->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" c:defaultCharset="UTF-8"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean
                class="com.elim.learn.spring.mvc.interceptor.MyAsyncHandlerInterceptor" />
        </mvc:interceptor>
        <!-- 没有用interceptor包裹起来的表示对所有的请求生效 -->
        <bean class="com.elim.learn.spring.mvc.interceptor.MyInterceptor" />
        <!-- 响应theme变更的拦截器，这里配置的是对所有的请求都生效，而实际应用中可能会弄一个特定的URL进行theme的变更，以便校验指定的 
            theme的有效性或者保存当前用户选择的theme到数据库等 -->
        <bean
            class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" />
        <mvc:interceptor>
            <mvc:mapping path="/interceptor/**" /><!-- 匹配的 -->
            <mvc:exclude-mapping path="/interceptor/b" /><!-- 
                不匹配的 -->
            <bean class="com.elim.learn.spring.mvc.interceptor.MyInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
    <mvc:resources location="/static/" mapping="/static/**" />

    <context:property-placeholder location="classpath:application.properties" />

    <context:component-scan base-package="com.elim.learn.spring.mvc"/>

    <bean
        class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="mappings">
            <props>
                <prop key="/abc">abcController</prop>
            </props>
        </property>
    </bean>

    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <bean id="themeSource"
        class="org.springframework.ui.context.support.ResourceBundleThemeSource"
        p:basenamePrefix="META-INF/theme/" />
    <!-- 默认不指定默认的theme名称时，默认的theme名称是theme -->
    <bean id="themeResolver"
        class="org.springframework.web.servlet.theme.SessionThemeResolver"
        p:defaultThemeName="default" />

    <!-- 上传文件的解析器 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
    </bean>

</beans>