<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd        
	http://code.alibabatech.com/schema/dubbo        
	http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

  <!-- 提供方应用信息，用于计算依赖关系 -->
  <dubbo:application name="learn-dubbo-server"/>

  <!-- 使用multicast广播注册中心暴露服务地址 -->
  <!--<dubbo:registry address="multicast://224.5.6.7:1234"/>-->

  <dubbo:registry address="zookeeper://localhost:2181"/>

  <!-- provider元素用于指定服务提供者的全局配置，可被具体服务或具体的服务方法配置覆盖 -->
  <!-- 线程数是所有服务提供者共用。accepts用来定义能够接受的所有客户端的最大连接数，面向所有服务。 -->
  <!-- executes用于指定服务所有方法的并发线程数，并发线程数超出时将抛出RpcException，
   retries用来定义重试次数，当捕获到RpcException时将进行重试-->
  <dubbo:provider executes="300" accepts="100" retries="0" threads="220" timeout="600000" host="localhost"/>

  <!-- <dubbo:registry address="zookeeper://localhost:2181" client="zkclient"/> -->

  <!-- 用dubbo协议在20880端口暴露服务 -->
  <dubbo:protocol name="dubbo" port="20880"/>

  <!-- 声明需要暴露的服务接口 -->
  <dubbo:service interface="com.elim.learn.dubbo.service.UserService"
                 stub="com.elim.learn.dubbo.service.UserServiceStub" ref="userService"
                 executes="10" version="1.0.0" >
    <dubbo:method name="sayHello"/>
  </dubbo:service>

  <dubbo:service interface="com.elim.learn.dubbo.service.Service2" ref="service2"/>

  <!-- 和本地bean一样实现服务 -->
  <bean id="userService" class="com.elim.learn.dubbo.service.UserServiceImpl"/>

  <bean id="service2" class="com.elim.learn.dubbo.service.Service2Impl"/>

</beans>